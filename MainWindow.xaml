<Window x:Name="window" x:Class="Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
        xmlns:local="clr-namespace:Calculator"
        mc:Ignorable="d"
        Height="482" Width="317"
        Background="{x:Null}"
        ResizeMode="CanResize"
        WindowStyle="None"
        Foreground="Transparent" 
        Activated="active"
        Deactivated="inactive"
        AllowsTransparency="True"
        SnapsToDevicePixels="True"
        SizeChanged="fontchange"
        MinHeight="500" MinWidth="317"
        KeyDown="window_KeyDown"
        Loaded="load" KeyUp="window_KeyUp"
        Title="Calculator" PreviewKeyDown="Window_PreviewKeyDown">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="6"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="WrappingStyle">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="5" Margin="8,0,-2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CONTEXTMENU-->
        <Style TargetType="ContextMenu" x:Key="cm">
            <Setter Property="Background" Value="#FF343434"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#FF343434"
                                CornerRadius="20, 7, 20, 7"
                                BorderBrush="DarkGray" 
                                BorderThickness="1">
                            <StackPanel ClipToBounds="True" IsItemsHost="True">
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--MENUITEM-->
        <Style TargetType="MenuItem" x:Key="mi">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Background="{TemplateBinding Background}"
                                HorizontalAlignment="Left"
                                Padding="17,2,17,2"
                                Margin="5,5,5,0"
                                CornerRadius="15,5,15,5">
                            <ContentPresenter Content="{TemplateBinding Header}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="#FF787878"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FFC8C8C8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--HISTORYFIELD-->
        <Style TargetType="TextBox" x:Key="historyfield">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="SelectionBrush" Value="Transparent"/>
            <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Margin" Value="0,197,0,0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Background" Value="#BF272727"/>
        </Style>

        <!--TEXTBOX-->
        <Style TargetType="TextBox" x:Key="tbx">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="Transparent">
                            <ContentPresenter Content="{TemplateBinding Text}"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--FIRSTTBX-->
        <Style TargetType="TextBlock" x:Key="ftbx">
            <Setter Property="FontFamily" Value="Comic Sans"/>
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,160,0,142"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="158"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,10,5,0"/>
        </Style>

        <!--NUMBERS-->
        <Style TargetType="{x:Type Button}" x:Key="numbers">
            <Setter Property="Background" Value="#FF080808"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ACTIONS-->
        <Style TargetType="{x:Type Button}" x:Key="actions">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--DEFAULTMATHACTIONS-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactions">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--NUMBERSPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="numberspressed">
            <Setter Property="Background" Value="#FF5D5D5D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ACTIONSPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="actionspressed">
            <Setter Property="Background" Value="#FF959595"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DEFAULTMATHACTIONSPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactionspressed">
            <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--NUMBERSBIG-->
        <Style TargetType="{x:Type Button}" x:Key="numbersBIG">
            <Setter Property="Background" Value="#FF080808"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ACTIONSBIG-->
        <Style TargetType="{x:Type Button}" x:Key="actionsBIG">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--DEFAULTMATHACTIONSBIG-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactionsBIG">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontSize" Value="38"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--NUMBERSBIGPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="numbersBIGpressed">
            <Setter Property="Background" Value="#FF5D5D5D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ACTIONSBIGPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="actionsBIGpressed">
            <Setter Property="Background" Value="#FF959595"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DEFAULTMATHACTIONSBIGPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactionsBIGpressed">
            <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontSize" Value="38"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--NUMBERSMAX-->
        <Style TargetType="{x:Type Button}" x:Key="numbersMAX">
            <Setter Property="Background" Value="#FF080808"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ACTIONSMAX-->
        <Style TargetType="{x:Type Button}" x:Key="actionsMAX">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5D5D5D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF959595"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--DEFAULTMATHACTIONSMAX-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactionsMAX">
            <Setter Property="Background" Value="#FF191919"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.35"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--NUMBERSMAXPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="numbersMAXpressed">
            <Setter Property="Background" Value="#FF5D5D5D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ACTIONSMAXPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="actionsMAXpressed">
            <Setter Property="Background" Value="#FF959595"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DEFAULTMATHACTIONSMAXPRESSED-->
        <Style TargetType="{x:Type Button}" x:Key="defaultmathactionsMAXpressed">
            <Setter Property="Background" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Opacity" Value="0.92"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DropShadowEffect x:Key="lbmenu" Color="{x:Static SystemParameters.WindowGlassColor}" BlurRadius="2" ShadowDepth="0" />

        <!--ARROWS-->
        <Style TargetType="{x:Type Button}" x:Key="arrows">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="15px"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF878787"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid x:Name="grid" Background="Transparent" SnapsToDevicePixels="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="36"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--BACKGROUND BLUR-->
        <Viewbox Stretch="Fill" Opacity="0.989" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <StackPanel Height="236" Width="317" Background="#FF282828" Opacity="0.989">
                <StackPanel.BitmapEffect>
                    <BlurBitmapEffect Radius="3"/>
                </StackPanel.BitmapEffect>
            </StackPanel>
        </Viewbox>

        <TextBox x:Name="tb"
                   Style="{StaticResource tbx}"
                   Foreground="Red"
                   IsReadOnly="True"
                   IsReadOnlyCaretVisible="False"
                   Margin="37.104,4,124,0"
                   Height="21"
                   VerticalAlignment="Top"
                   VerticalContentAlignment="Center"
                   TextChanged="TextChanged" FontFamily="Consolas"
                   Visibility="Hidden"
                   Grid.RowSpan="2" Grid.Column="1">
        </TextBox>

        <!--TEXTBOX-->
        <TextBox x:Name="textbox1"
                     Style="{StaticResource tbx}"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="False"
                     Margin="15,145,15,0"
                     Foreground="White"
                     FontFamily="Consolas"
                     FontSize="36.0"
                     Height="48.0"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Center"
                     Grid.RowSpan="2" 
                     Grid.ColumnSpan="2"
                     TextChanged="Textbox1_TextChanged">
            <TextBox.ContextMenu>
                <ContextMenu Style="{StaticResource cm}" FontFamily="Consolas" FontSize="20">

                    <ContextMenu.Triggers>
                        <EventTrigger RoutedEvent="ContextMenu.Opened">
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation 
                                    Storyboard.TargetProperty= "Width"
                                    From="0" To="90"                                
                                    Duration="0:0:0.2"/>

                                    <DoubleAnimation
                                    Storyboard.TargetProperty= "Height"
                                    From="0" To="40"                                
                                    Duration="0:0:0.2"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ContextMenu.Triggers>

                    <MenuItem Style="{StaticResource mi}" Header="Copy" Click="CopyClick" FontFamily="Consolas" FontSize="20" HorizontalAlignment="Center"/>
                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>

        <UniformGrid Rows="6" Columns="4" Margin="5,204,5,5"  Grid.RowSpan="2" Grid.ColumnSpan="2">

            <Button x:Name="b8" Content="%" Style="{StaticResource actions}"  Margin="2" TabIndex="4" Click="percent"/>
            <Button x:Name="b9" Content="√" Style="{StaticResource actions}"  Margin="2" TabIndex="5" Click="sqrt" />
            <Button x:Name="b10" Content="x²" Style="{StaticResource actions}"  Margin="2" TabIndex="6" Click="sqr" />
            <Button x:Name="b11" Content="1/x" Style="{StaticResource actions}"  TabIndex="7" Click="reverse" />
            <Button x:Name="b12" Content="CE" Style="{StaticResource actions}"  TabIndex="25" Click="clearend" />
            <Button x:Name="b13" Content="C" Style="{StaticResource actions}" Click="clear" TabIndex="26"/>
            <Button x:Name="b14" Content="⌫" Style="{StaticResource actions}"  Click="backspace" TabIndex="27" />
            <Button x:Name="b1" Content="÷" Style="{StaticResource defaultmathactions}" Click="Doact" MouseEnter="enter" MouseLeave="leave" PreviewMouseLeftButtonDown="down" PreviewMouseLeftButtonUp="up" Tag="/" TabIndex="8" />
            <Button x:Name="b15" Content="7" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="22" />
            <Button x:Name="b16" Content="8" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="23" />
            <Button x:Name="b17" Content="9" Style="{StaticResource numbers}"  Click="button_Click" Tag="" TabIndex="24"/>
            <Button x:Name="b2" Content="×" Style="{StaticResource defaultmathactions}" Click="Doact" MouseEnter="enter" MouseLeave="leave" PreviewMouseLeftButtonDown="down" PreviewMouseLeftButtonUp="up" Tag="*" TabIndex="9" />
            <Button x:Name="b18" Content="4" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="19" />
            <Button x:Name="b19" Content="5" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="20" />
            <Button x:Name="b20" Content="6" Style="{StaticResource numbers}"  Click="button_Click"  TabIndex="21" />
            <Button x:Name="b3" Content="-" Style="{StaticResource defaultmathactions}"  Click="Doact" MouseEnter="enter" MouseLeave="leave" PreviewMouseLeftButtonDown="down" PreviewMouseLeftButtonUp="up" Tag="-" TabIndex="10" />
            <Button x:Name="b21" Content="1" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="16" />
            <Button x:Name="b22" Content="2" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="17" />
            <Button x:Name="b23" Content="3" Style="{StaticResource numbers}"  Click="button_Click" TabIndex="18" />
            <Button x:Name="b4" Content="+" Style="{StaticResource defaultmathactions}"  Click="Doact" Tag="+" MouseEnter="enter" MouseLeave="leave" PreviewMouseLeftButtonDown="down" PreviewMouseLeftButtonUp="up" TabIndex="11" Margin="2"/>
            <Button x:Name="b7" Content="±" Style="{StaticResource actions}"  TabIndex="14" Click="plusminus"/>
            <Button x:Name="b24" Content="0" Style="{StaticResource numbers}"  Click="button_Click" Tag="0" TabIndex="15" />
            <Button x:Name="b6" Content="." Style="{StaticResource actions}"  Click="setdot" VerticalContentAlignment="Top" Margin="2" TabIndex="13"/>
            <Button x:Name="b5" Content="=" Style="{StaticResource defaultmathactions}"  Click="agree" Margin="2" MouseEnter="enter" MouseLeave="leave" PreviewMouseLeftButtonDown="down" PreviewMouseLeftButtonUp="up" TabIndex="12"/>

        </UniformGrid>

        <TextBox x:Name="history"
                 Foreground="White"
                 IsReadOnly="True"
                 IsReadOnlyCaretVisible="False"
                 Margin="22,72,22,0"
                 Height="68"
                 VerticalAlignment="Top"
                 VerticalContentAlignment="Center"
                 TextChanged="TextChanged" 
                 FontSize="60" FontFamily="Consolas"
                 Grid.RowSpan="2"
                 BorderThickness="0"
                 Background="{x:Null}"
                 TextAlignment="Right"
                 Cursor="Arrow"
                 SelectionOpacity="0" Grid.ColumnSpan="2" PreviewMouseLeftButtonDown="History_PreviewMouseLeftButtonDown" PreviewMouseWheel="History_PreviewMouseWheel">

            <TextBox.ContextMenu>
                <ContextMenu x:Name="ContextMenu1" Style="{StaticResource cm}" FontFamily="Consolas" FontSize="20" >

                    <ContextMenu.Triggers>
                        <EventTrigger RoutedEvent="ContextMenu.Opened">
                            <BeginStoryboard>
                                <Storyboard>

                                    <DoubleAnimation 
                                        Storyboard.TargetProperty= "Width"
                                        From="0" To="220"                                
                                        Duration="0:0:0.2"/>

                                    <DoubleAnimation
                                        Storyboard.TargetProperty= "Height"
                                        From="0" To="138"                                
                                        Duration="0:0:0.2"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ContextMenu.Triggers>

                    <MenuItem Style="{StaticResource mi}" Header="Copy last number" Click="CopylnClick"/>
                    <MenuItem Style="{StaticResource mi}" Header="Copy result" Click="CopyClick"/>
                    <MenuItem Style="{StaticResource mi}" Header="Paste to end" Click="PasteAfterClick"/>
                    <MenuItem Style="{StaticResource mi}" Header="Paste" Click="PasteClick"/>

                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>

        <Button x:Name="leftscroll" 
                Style="{Binding Source={StaticResource arrows}}"
                Content="&lt;"
                HorizontalAlignment="Left"
                Margin="5,101,0,0" 
                Grid.RowSpan="2" 
                VerticalAlignment="Top"
                Width="15" 
                Click="leftscroll_Click" 
                Height="15" FontFamily="SimSun" FontWeight="Bold"/>

        <Button x:Name="rightscroll" 
                Style="{Binding Source={StaticResource arrows}}"
                Content="&gt;" 
                Margin="0,101,5,0" 
                Grid.RowSpan="2"
                VerticalAlignment="Top" 
                Click="rightscroll_Click" 
                Height="15" FontFamily="SimSun-ExtB" FontWeight="Bold" HorizontalAlignment="Right" Width="15" Grid.Column="1"/>

        <Border x:Name="overlay" Width="Auto" Height="Auto"
            Background="#B2000000" 
                Grid.RowSpan="2" Grid.ColumnSpan="2"
                    Visibility="Visible">

            <Grid x:Name="overlaygrid">
                <Grid
                    x:Name="fgrid"
                    Margin="0,162" 
                    Grid.RowSpan="2"
                    Height="158"
                    Width="Auto"
                    Visibility="Visible">

                    <Rectangle x:Name="frect"
                            Width="Auto"
                            Height="158"
                            Stroke="Black" 
                            StrokeThickness="1px"
                            Fill="#FF4B4B4B"/>

                    <TextBlock x:Name="ftbx" Style="{StaticResource ResourceKey=ftbx}"
                    Margin="0,5,0,40" Height="Auto"><Run Text="Hello, User, it's my first program on WPF."/><LineBreak/><Run Text=" I think it will be useful for you."/><LineBreak/><Run Text="I know that the same programs already exist."/><LineBreak/><Run Text="But I decided to make my program."/><LineBreak/><Run Text="I hope you will enjoy and will use my program"/><LineBreak/><Run Text=" in the future, so let"/><Run Text="'s go to"/><Run Text=" "/><Run Text="use "/><Run Text="it!"/></TextBlock>

                    <Button x:Name="fbtn" Style="{StaticResource arrows}" 
                    Content="GO"
                    Margin="140,123,142,15"
                    Height="20px"
                    Width="35px" FontFamily="Comic Sans MS" FontSize="14" FontWeight="Bold">

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard>
                                    <Storyboard >

                                        <DoubleAnimation Storyboard.TargetName="fbtn"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.2"/>

                                        <DoubleAnimation Storyboard.TargetName="ftbx"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.2"/>

                                        <DoubleAnimation Storyboard.TargetName="frect"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.2"/>

                                        <DoubleAnimation Storyboard.TargetName="fgrid"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.2"
                                        Completed="firststart"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>

                    </Button>
                </Grid>
                <Grid x:Name="historyoverlay"
                      Visibility="Hidden">
                    <TextBox x:Name="historyfield"
                             Style="{StaticResource historyfield}"                             
                             Text=""
                             Foreground="White">
                    </TextBox>
                </Grid>
            </Grid>
        </Border>

        <Rectangle x:Name="rect1"
                   Height="30" 
                   VerticalAlignment="Top" 
                   HorizontalAlignment="Stretch"
                   MouseLeftButtonDown="rect1_MouseLeftButtonDown" Grid.RowSpan="2" Grid.ColumnSpan="2"/>

        <Button x:Name="close" Content="✖" RenderTransformOrigin="0.529,0.5"
                Foreground="White"
                BorderBrush="Black" 
                FontFamily="Consolas"
                FontSize="14"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Height="30"
                VerticalAlignment="Top" 
                HorizontalAlignment="Right" 
                Width="46" Grid.RowSpan="2" TabIndex="1" Grid.Column="1">

            <!--STYLE-->
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFDC0000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <!--ANIMATION-->
            <Button.Triggers>
                <EventTrigger RoutedEvent="ButtonBase.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName= "window"
                                Storyboard.TargetProperty= "Opacity"
                                From="1.0" To="0.0"                                
                                Duration="0:0:0.22"  
                                Completed= "closingAnimation"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>

        </Button>
        <Button x:Name="tomax"
                Content="◻"
                RenderTransformOrigin="0.5,0.489"
                Foreground="White" 
                FontFamily="Consolas"
                FontSize="18"
                Padding="0"
                BorderThickness="0"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center" 
                ClipToBounds="True"
                HorizontalAlignment="Right" 
                Width="46" 
                Margin="0,0,46,0" 
                Height="30" 
                VerticalAlignment="Top" 
                Grid.RowSpan="2" TabIndex="2" Grid.Column="1">

            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF818181" Opacity="0.55"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFACACAC"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Button.Triggers>
                <EventTrigger RoutedEvent="ButtonBase.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName= "window"
                                Storyboard.TargetProperty= "Opacity"
                                To="0.0"                                
                                Duration="0:0:0.1"
                                Completed="maximaze"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>

        </Button>

        <Button x:Name="tomin" 
                Content="—"
                VerticalAlignment="Top"
                Width="46"
                Height="30" 
                RenderTransformOrigin="0.507,0.533"
                Foreground="White" BorderBrush="{x:Null}"
                FontFamily="Consolas"
                FontSize="24" 
                Padding="0" 
                BorderThickness="0" 
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center" HorizontalAlignment="Right"  Margin="0,0,92,0" Grid.RowSpan="2" TabIndex="3" Grid.Column="1">

            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF818181" Opacity="0.55"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFACACAC"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Button.Triggers>
                <EventTrigger RoutedEvent="ButtonBase.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName= "window"
                                Storyboard.TargetProperty= "Opacity"
                                To="0.0"                                
                                Duration="0:0:0.14"  
                                Completed= "minimaze"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>

        </Button>

        <Label x:Name="namewindow" Content="Calculator" HorizontalAlignment="Left" Margin="6,2,0,0" VerticalAlignment="Top" Background="{x:Null}" Foreground="White" Height="28" Width="67" MouseLeftButtonDown="rect1_MouseLeftButtonDown" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
        <Button x:Name="historybtn" Content="" Margin="0,43,17,0" Grid.RowSpan="2" Height="20" Grid.Column="1" Click="Historybtn_Click" HorizontalAlignment="Right" Width="20" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <ImageBrush ImageSource="clock.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <ImageBrush ImageSource="clockmo.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <ImageBrush ImageSource="clock.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>

</Window>